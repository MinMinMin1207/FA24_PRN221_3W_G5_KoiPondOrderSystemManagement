@page
@model KoiPondOrderSystemManagement.RazorWebApp.Pages.OrderManage.IndexModel

@{
    ViewData["Title"] = "Order Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="text-primary">Order Management</h1>
</div>

<p>
    <a asp-page="Create" class="btn btn-success">+ Create New Order</a>
</p>
<form method="get" class="form-inline mb-4">
    <div class="input-group mr-2">
        <input style="max-width:200px;margin-bottom:10px" type="text" name="searchOrderId" class="form-control" placeholder="Order ID" value="@ViewData["searchOrderId"]" />
    </div>
    <div class="input-group mr-2">
        <input style="max-width:200px;margin-bottom:10px" type="text" name="searchDescription" class="form-control" placeholder="Order Description" value="@ViewData["searchDescription"]" />
    </div>
    <div class="input-group mr-2">
        <input style="max-width:200px;margin-bottom:10px" type="text" name="searchAddress" class="form-control" placeholder="Delivery Address" value="@ViewData["searchAddress"]" />
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<div id="orderTableContainer">
    <table id="orderTable" class="table table-striped">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].OrderId)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].OrderDescription)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].OrderDate)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].TotalCost)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].FinalCost)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].DeliveryAddress)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].DeliveryDate)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].OrderStatus)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].Customer)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].Payment)</th>
                <th>@Html.DisplayNameFor(model => model.OrderPagination[0].Promotion)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderPagination)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.OrderId)</td>
                    <td>@Html.DisplayFor(modelItem => item.OrderDescription)</td>
                    <td>@Html.DisplayFor(modelItem => item.OrderDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.TotalCost)</td>
                    <td>@Html.DisplayFor(modelItem => item.FinalCost)</td>
                    <td>@Html.DisplayFor(modelItem => item.DeliveryAddress)</td>
                    <td>@Html.DisplayFor(modelItem => item.DeliveryDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.OrderStatus)</td>
                    <td>@Html.DisplayFor(modelItem => item.Customer.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Payment.PaymentMethod)</td>
                    <td>@Html.DisplayFor(modelItem => item.Promotion.PromotionName)</td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.OrderId">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.OrderId">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.OrderId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="pagination">
    <ul class="pagination">
        @if (Model.OrderPagination.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-route-PageNumber="@(Model.OrderPagination.PageIndex - 1)" asp-route-SearchOrderId="@Model.SearchOrderId" asp-route-SearchDescription="@Model.SearchDescription" asp-route-SearchAddress="@Model.SearchAddress">Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Previous</span></li>
        }

        @for (int i = 1; i <= Model.OrderPagination.TotalPages; i++)
        {
            if (i == Model.OrderPagination.PageIndex)
            {
                <li class="page-item active"><span class="page-link">@i</span></li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-route-PageNumber="@i" asp-route-SearchOrderId="@Model.SearchOrderId" asp-route-SearchDescription="@Model.SearchDescription" asp-route-SearchAddress="@Model.SearchAddress">@i</a>
                </li>
            }
        }

        @if (Model.OrderPagination.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-route-PageNumber="@(Model.OrderPagination.PageIndex + 1)" asp-route-SearchOrderId="@Model.SearchOrderId" asp-route-SearchDescription="@Model.SearchDescription" asp-route-SearchAddress="@Model.SearchAddress">Next</a>
            </li>
        }
        else
        {
            <li class="page-item disabled"><span class="page-link">Next</span></li>
        }
    </ul>
</div>

